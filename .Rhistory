con <- url("http://markartur.github.io/","r")
x <- readLines(con)
head(x)
clear
find.package(devtools)
install.package(devtools)
install.packages(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
swirl()
library(swirl)
swirl
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dum(my_vector) <- c(4,5)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina" , "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
5 != 7
5 !== 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
play()
isTRUE(3)
isTRUE(NA)
nxt()
identical('twins', 'twins')
play()
identical('hello', 'Hello')
nxt()
xor(5 == 6, !FALSE)
ints <-- sample(10)
ints <- sample(10)
play(_)
play()
ints
nxt()
ints
ints > 5
which(ints > 7)
play()
y >- which(ints > 7)
y <- which(ints > 7)
y
class(y)
y <- which(ints > 9)
class(y)
y
nxt()
any(ints < 0)
all(ints > 0)
play()
ints
z <- any(ints < 0)
z
class(z)
z <- all(ints > 0)
class(z)
z
z <- all(ints > 3)
class(z)
z
z <- any(ints < 5)
class(z)
z
z <- which(ints < 5)
class(z)
z
z <- which(ints > 50)
class(z)
z
bye()
?rbinom
rbinom(2,1,.5)
rbinom(1,2,.5)
rbinom(1,2,.5)
rbinom(1,2,.5)
rbinom(1,2,.5)
rbinom(1,2,.5)
rbinom(1,2,.33333)
rbinom(1,2,.33333)
rbinom(1,2,.33333)
rbinom(1,2,.33333)
rbinom(1,2,.33333)
rbinom(1,2,.33333)
rbinom(1,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.33333)
rbinom(2,2,.5)
rbinom(2,2,.5)
rbinom(2,2,.5)
rbinom(2,2,.5)
rbinom(2,2,.5)
rbinom(2,2,.5)
rbinom(2,2,.5)
rbinom(2,2,.5)
rbinom(2,2,.5)
z <- 5
while (z < 3 && z > 10) {
print(z)
coin <- rbinom(1,1,.5)
if (coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
}
while (z >= 3 && z <= 10) {
} else {
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, .5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, .5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, .5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, .5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, .5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
} else {
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, .5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, .5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
args(paste)
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = "!")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = "!", collapse = KK)
?paste
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = "!", collapse = "KK")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = "!", collapse = "YESHEIS")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", collapse = "YESHEIS")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", collapse = "!")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = NULL, collapse = "!")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = " ", collapse = "!")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = " ", collapse = "+")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = " ", collapse = " + ")
paste(c(X, Y), 1:4, sep = " ", collapse = " + ")
paste(c("X", "Y"), 1:4, sep = " ", collapse = " + ")
paste(c("X", "Y"), 1:4, sep = "", collapse = " + ")
paste("Sid", "Is", "The", "GREATEST", "Person", "Ever", sep = "", collapse = " + ")
paste("Sid", "Is", sep = "", collapse = " + ")
paste("Sid", "Is", collapse = " + ")
paste("Sid", "Is", collapse = " ! ")
paste("Sid", 1:4, collapse = " ! ")
paste("Sid", 1:4, sep = "", collapse = " ! ")
paste("Sid", "1:4", sep = "", collapse = " ! ")
paste("Sid", "1:4", sep = " ", collapse = " ! ")
search()
clear
rm(list=ls())
?rm
x = 5
y = 6
rm(tmp)
?ls
ls()
rm(ls)
rm(ls())
rm(list = ls())
?ls
x <- 5
y <- (if x < 3) {
NA
} else {
10
}
x <- 5
y <- (if x < 3) {
NA
} else {
10
}
x <- 5
y <- (if x < 3) {
NA
} else {
10
}
x <- 5
y <- (if x < 3) {
NA
} else {
10
}
source('~/Desktop/R Programming/Week2_stuff.R', echo=TRUE)
source('~/Desktop/R Programming/Week2_stuff.R', echo=TRUE)
y
source('~/Desktop/R Programming/Week2_stuff.R', echo=TRUE)
source('~/Desktop/R Programming/Week2_stuff.R', echo=TRUE)
y
x <- matrix(1:4)
x
x <- matrix(1:4, 2, 2)
x
solve(x)
?solve
matrix(1, 0, 1, 1)
?matrix
matrix(c(1,0,0,1), 2, 2)
y <- matrix(c(1,0,0,1), 2, 2)
x*y
x*solve(x)
x
z <- solve(x)
x*z
x <- matrix(1:4, 2, 2, byrow = TRUE)
x
x*z
z <- solve(x)
x*z
x <- matrix(c(4, 7, 2, 6), 2, 2, byrow = TRUE)
x
z <- solve(x)
x*z
x %*% z
z
?'<<-'
x <<- 6
x
y <- x
y
getwd()
setwd("Desktop/R Programming")
getwd()
setwd("week3")
setwd("Week3")
setwd("Week 3")
getwd()
source("Assignment2test.R")
vec <- c(1:32)
makeVector(vec)
cachemean(vec)
cachemean(vec)
x <- c(1:32)
class(x)
x <- 1:32
class(x)
x
x <- makeVector(x)
x
vec$getmean()
mx <- mean(x)
rm(list = ls())
x <- 1:10000
soruce("Assignment2test.R")
source("Assignment2test.R")
vec <- makeVector(x)
vec$getmean()
mx <- mean(x)
mx
vec$setmean(mx)
vec$getmean()
vec$getevn()
ls(vec$getevn())
parent.env(vec$getevn())
ls(parent.env(vec$getevn()))
ls(vec$getevn())
ls(parent.env(vec$getevn()))
parent.env(vec$getevn())$m
cachemean(x)
cachemean(vec)
vec1 <- makeVector(x)
cachemean(vec1)
vec2 <- makeVector()
cachemean(vec2)
vec$get()
vec1$get()
vec2$get()
rm(list=ls(
))
set("..")
setwd("..")
getwd()
dir()
setwd("ProgrammingAssignment2")
dir()
setwd("ProgrammingAssignment2")
dir()
source("cachematrix.R")
x <- matrix(c(2,0,0,0,1,0,2,2,2), 3, 3)
x
solve(x)
solve(x)%*%x
x
cacheSolve(x)
makeCacheMatrix(x)
mat <- makeCacheMatrix(x)
cacheSolve(mat)
mat$get
mat$get()
mat$setinv()
mat$setinv(mat$setinv)
mat$setinv(mat$setget)
mat$setinv(mat$get)
ls(parent.env(mat$getevn()))
parent.env(mat$getevn())$m
cacheSolve(mat)
